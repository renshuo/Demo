
# postgre config
# comment these config to use inner hsqldb
spring:
  jpa:
    hibernate:
      ddl-auto: create
  datasource:
#    driver-class-name: org.postgresql.Driver # guess from url
    url: jdbc:postgresql://localhost:5432/test
    username: sren
    password: qwe
  application:
    index: 1 # Application index.
    name: sprbootTEST # Application name.
  data: # MONGODB (MongoProperties)
    mongodb:
#      authentication-database: # Authentication database name.
#      field-naming-strategy:  # Fully qualified name of the FieldNamingStrategy to use.
#      grid-fs-database: # GridFS database name.
      uri: mongodb://localhost:27017/test # Mongo database URI. When set, host and port are ignored.
#      host: localhost # Mongo server host.
#      port: 27017 # Mongo server port.
#      database: test # Database name.
#      password:  # Login password of the mongo server.
#      repositories.enabled: true # Enable Mongo repositories.
#      username:  # Login user of the mongo server.
  redis:
    host: localhost

## REDIS (RedisProperties)
#spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
#spring.redis.database=0 # Database index used by the connection factory.
#spring.redis.host=localhost # Redis server host.
#spring.redis.password= # Login password of the redis server.
#spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
#spring.redis.port=6379 # Redis server port.
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
#spring.redis.timeout=0 # Connection timeout in milliseconds.

## JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
#spring.data.jpa.repositories.enabled=true # Enable JPA repositories.
#spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
#spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
#spring.jpa.generate-ddl=false # Initialize the schema on startup.
#spring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
#spring.jpa.hibernate.naming.implicit-strategy= # Hibernate 5 implicit naming strategy fully qualified name.
#spring.jpa.hibernate.naming.physical-strategy= # Hibernate 5 physical naming strategy fully qualified name.
#spring.jpa.hibernate.naming.strategy= # Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.
#spring.jpa.hibernate.use-new-id-generator-mappings= # Use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.properties.*= # Additional native properties to set on the JPA provider.
#spring.jpa.show-sql=false # Enable logging of SQL statements.

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.continue-on-error=false # Do not stop if an error occurs while initializing the database.
#spring.datasource.data= # Data (DML) script resource reference.
#spring.datasource.data-username= # User of the database to execute DML scripts (if different).
#spring.datasource.data-password= # Password of the database to execute DML scripts (if different).
#spring.datasource.dbcp.*= # Commons DBCP specific settings
#spring.datasource.dbcp2.*= # Commons DBCP2 specific settings
#spring.datasource.driver-class-name= # Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
#spring.datasource.generate-unique-name=false # Generate a random datasource name.
#spring.datasource.hikari.*= # Hikari specific settings
#spring.datasource.initialize=true # Populate the database using 'data.sql'.
#spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).
#spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.
#spring.datasource.name=testdb # Name of the datasource.
#spring.datasource.password= # Login password of the database.
#spring.datasource.platform=all # Platform to use in the schema resource (schema-${platform}.sql).
#spring.datasource.schema= # Schema (DDL) script resource reference.
#spring.datasource.schema-username= # User of the database to execute DDL scripts (if different).
#spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).
#spring.datasource.separator=; # Statement separator in SQL initialization scripts.
#spring.datasource.sql-script-encoding= # SQL scripts encoding.
#spring.datasource.tomcat.*= # Tomcat datasource specific settings
#spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
#spring.datasource.url= # JDBC url of the database.
#spring.datasource.username=

server:
  port: 8000

logging:
  file: ./bootTest.log
  level:
    org:
      hibernate: ERROR
      springframework: ERROR




## DATA REST (RepositoryRestProperties)
#spring.data.rest.base-path= # Base path to be used by Spring Data REST to expose repository resources.
#spring.data.rest.default-page-size= # Default size of pages.
#spring.data.rest.enable-enum-translation= # Enable enum value translation via the Spring Data REST default resource bundle.
#spring.data.rest.limit-param-name= # Name of the URL query string parameter that indicates how many results to return at once.
#spring.data.rest.max-page-size= # Maximum size of pages.
#spring.data.rest.page-param-name= # Name of the URL query string parameter that indicates what page to return.
#spring.data.rest.return-body-on-create= # Return a response body after creating an entity.
#spring.data.rest.return-body-on-update= # Return a response body after updating an entity.
#spring.data.rest.sort-param-name= # Name of the URL query string parameter that indicates what direction to sort results.

#spring:
#  application:
#    admin: enabled
#security:
#  user:
#    name: sren
#    password: qwe1
#
#management:
#  security:
#    roles: SUPERUSER


